name: Build Only

on:
  workflow_dispatch:
  release:
    types:
      - created
    
jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install --force
            
      - name: Ensure 'ios' directory is present
        run: mkdir -p ios

      - name: Install CocoaPods dependencies (iOS only)
        run: cd ios && sudo gem install cocoapods

      - name: ensure 'Android' directory is present
        run: mkdir -p android

      - name: Generate Android keystore
        run: |
          keytool -genkey -v -keystore android/app/my-release-key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias ${{ secrets.ANDROID_KEY_ALIAS }} -storepass ${{ secrets
            .ANDROID_KEYSTORE_PASSWORD }} -keypass ${{ secrets
            .ANDROID_KEY_PASSWORD }} -dname "CN=Volunteam, OU=BVC Developer, O=Bow Valley College, L=Calgary, S=Alberta, C=Canada"
        env:
            ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
            ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
            ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Decode keystore
        run: echo $ANDROID_KEYSTORE | base64 --decode > android/app/my-release-key.jks
        env:
            ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}

      - name: Create Android Build
        run: |
          cd android
          ./gradlew assembleRelease
      
      - name: Upload Android artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-release.apk
          path: android/app/build/outputs/apk/release/app-release.apk

      - name: Decode certificate and provisioning profile
        run: |
            echo $APPLE_CERTIFICATE | base64 --decode > ios/certificate.p12
            echo $APPLE_PROVISIONING_PROFILE | base64 --decode > ios/profile.mobileprovision
        
      - name: Install provisioning profile
        run: mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles && cp ios/profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
        
      - name: Install certificate
        run: security import ios/certificate.p12 -k ~/Library/Keychains/login.keychain-db -P ${{ secrets.APPLE_CERTIFICATE_PASSWORD }} -T /usr/bin/codesign
 
      - name: Build iOS binary
        run: |
          cd ios
          xcodebuild -workspace Volunteam.xcworkspace \
                     -scheme Volunteam \
                     -sdk iphoneos \
                     -configuration Release \
                     -archivePath $PWD/build/Volunteam.xcarchive \
                     archive
          xcodebuild -exportArchive \
                     -archivePath $PWD/build/Volunteam.xcarchive \
                     -exportPath $PWD/build \
                     -exportOptionsPlist ExportOptions.plist
        env:
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_PROVISIONING_PROFILE: ${{ secrets.APPLE_PROVISIONING_PROFILE }}

      - name: Upload iOS artifact
        uses: actions/upload-artifact@v3
        with:
          name: ios-release.ipa
          path: ios/build/Volunteam.ipa
